@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
  --expo-out: cubic-bezier(0.16, 1, 0.3, 1);
  --circle-center: 50% 50%;
  --circle-size: 0%;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@keyframes personBobbing {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-5px);
  }
}

@keyframes screenGlow {
  0%, 100% {
    box-shadow: 0 0 3px #4299e1;
  }
  50% {
    box-shadow: 0 0 8px #4299e1;
  }
}

@keyframes floatingContainer {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes windowGlow {
  0% {
    opacity: 0.6;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.6;
  }
}

@keyframes starsShimmer {
  0% {
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.5;
  }
}

body,
html {
  margin: 0;
  padding: 0;
  height: 100%;
  font-family: Arial, sans-serif;
  overflow: hidden;
  background-color: #e5eeff;
}

body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: background-color 0.5s ease;
  position: relative;
  min-height: 100vh;
  overflow: hidden;
}

/* Optional: Can comment these out if the direct image elements work better */
body::before,
body::after {
  content: "";
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 350px;
  background-repeat: repeat-x;
  background-position: bottom center;
  background-size: auto 350px;
  transition: opacity 0.8s ease, transform 1.2s ease;
  z-index: -1;
  pointer-events: none;
  opacity: 0; /* Start with both hidden, let the direct elements handle the display */
}

body::before {
  background-image: url('/office-day.png');
  transform: translateZ(0) scale(1.05);
}

body::after {
  background-image: url('/office-night.png');
  transform: translateZ(0) scale(1.0);
}

body.night {
  background-color: #1e2235;
}

body.night::before {
  opacity: 0;
  transform: translateZ(0) scale(1.0);
}

body.night::after {
  opacity: 0; /* Let the direct element handle it */
  transform: translateZ(0) scale(1.05);
  box-shadow: inset 0 15px 25px rgba(0, 0, 0, 0.5);
}

/* Added styles for direct background elements */
.day-background,
.night-background {
  pointer-events: none !important;
  will-change: opacity;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100vw;
  height: 400px;
  z-index: 0;
  border: 2px dashed red; /* DEBUG: Remove after confirming visibility */
}

.day-background {
  transform: translateZ(0) scale(1.05);
}

.night-background {
  box-shadow: inset 0 15px 25px rgba(0, 0, 0, 0.5);
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 30px;
  position: relative;
  z-index: 1;
  margin-bottom: 100px;
  transition: all 0.8s ease;
}

body.night .container {
  animation: floatingContainer 8s ease-in-out infinite;
}

.datetime-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 20px;
}

.time-display {
  font-size: 48px;
  font-weight: 700;
  color: #2d3748;
  margin-bottom: 0;
  font-family: 'Arial', sans-serif;
  transition: all 0.5s ease;
  text-align: center;
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  line-height: 1;
}

body.night .time-display {
  color: #edf2f7;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
}

.date-display {
  font-size: 16px;
  color: #4a5568;
  margin-bottom: 0;
  transition: all 0.5s ease;
  text-align: center;
  opacity: 0.8;
  margin-top: 5px;
}

body.night .date-display {
  color: #a0aec0;
}

.switch {
  position: relative;
  width: 300px;
  height: 120px;
  border-radius: 60px;
  cursor: pointer;
  transition: all 0.4s ease;
  box-shadow: 0 3px 20px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  background-color: #d3e1ff;
  border: 6px solid #afbcc7;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transition: 0.4s;
  border-radius: 60px;
  background: linear-gradient(to right, #c1daf3, #d3e1ff);
  overflow: hidden;
}

.sun {
  position: absolute;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  top: 14px;
  left: 15px;
  background: #ffd24d;
  box-shadow: 0 0 15px rgba(255, 210, 77, 0.5);
  transition: 0.4s;
}

.moon {
  position: absolute;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  top: 14px;
  right: 15px;
  background: #eef2f7;
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
  transition: 0.4s;
  transform: translateX(300px);
}

.moon::before {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  background: #c4c9d1;
  border-radius: 50%;
  top: 18px;
  left: 25px;
}

.moon::after {
  content: "";
  position: absolute;
  width: 22px;
  height: 22px;
  background: #d1d6de;
  border-radius: 50%;
  top: 40px;
  left: 45px;
}

.cloud {
  position: absolute;
  background-color: white;
  border-radius: 20px;
  transition: 0.4s;
}

.cloud::before,
.cloud::after {
  content: "";
  position: absolute;
  background-color: white;
  border-radius: 50%;
}

.cloud1 {
  width: 70px;
  height: 20px;
  top: 30px;
  left: 110px;
}

.cloud1::before {
  width: 30px;
  height: 30px;
  top: -15px;
  left: 10px;
}

.cloud1::after {
  width: 25px;
  height: 25px;
  top: -12px;
  right: 10px;
}

.cloud2 {
  width: 50px;
  height: 15px;
  top: 70px;
  left: 180px;
}

.cloud2::before {
  width: 25px;
  height: 25px;
  top: -12px;
  left: 5px;
}

.cloud2::after {
  width: 20px;
  height: 20px;
  top: -10px;
  right: 5px;
}

.star {
  position: absolute;
  background-color: white;
  width: 3px;
  height: 3px;
  border-radius: 50%;
  opacity: 0;
  transition: 0.4s;
}

.star1 {
  top: 30px;
  left: 60px;
}

.star2 {
  top: 50px;
  left: 100px;
}

.star3 {
  top: 20px;
  left: 150px;
}

.star4 {
  top: 80px;
  left: 190px;
}

.star5 {
  top: 40px;
  left: 220px;
}

input:checked + .slider {
  background: linear-gradient(to right, #1a1e31, #252c46);
}

input:checked + .slider .sun {
  transform: translateX(-300px);
}

input:checked + .slider .moon {
  transform: translateX(0);
}

input:checked + .slider .cloud {
  opacity: 0;
  transform: translateY(-100px);
}

input:checked + .slider .star {
  opacity: 1;
  animation: starsShimmer 3s ease-in-out infinite;
}

input:checked + .slider .star1 {
  animation-delay: 0s;
}

input:checked + .slider .star2 {
  animation-delay: 0.5s;
}

input:checked + .slider .star3 {
  animation-delay: 1s;
}

input:checked + .slider .star4 {
  animation-delay: 1.5s;
}

input:checked + .slider .star5 {
  animation-delay: 2s;
}

.star1 {
  width: 5px;
  height: 5px;
}

.star2 {
  width: 3px;
  height: 3px;
}

.star3 {
  width: 4px;
  height: 4px;
}

.star4 {
  width: 2px;
  height: 2px;
}

.star5 {
  width: 3px;
  height: 3px;
}

.label {
  font-size: 16px;
  color: #555;
  margin-top: 20px;
  text-align: center;
}

body.night .label {
  color: #eee;
}

/* Hide office elements as we'll use the image instead */
.person, .desk, .computer, .lamp {
  display: none;
}

/* Window illumination glow effect */
.window-illumination {
  pointer-events: none;
  animation: windowGlow 5s ease-in-out infinite;
}

/* Night mode general adjustments */
body.night .switch {
  box-shadow: 0 3px 20px rgba(0, 0, 0, 0.3);
}

::view-transition-group(root) {
  animation-duration: 1s;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

::view-transition-old(root) {
  mix-blend-mode: normal;
}

::view-transition-new(root) {
  mix-blend-mode: normal;
}

@keyframes circle-in {
  from {
    clip-path: circle(var(--circle-size) at var(--circle-center));
  }
  to {
    clip-path: circle(125% at var(--circle-center));
  }
}

@keyframes circle-out {
  from {
    clip-path: circle(125% at var(--circle-center));
  }
  to {
    clip-path: circle(var(--circle-size) at var(--circle-center));
  }
}

::view-transition-old(root) {
  animation: 0.5s cubic-bezier(0.4, 0, 0.2, 1) both circle-out;
}

::view-transition-new(root) {
  animation: 0.5s cubic-bezier(0.4, 0, 0.2, 1) both circle-in;
}

/* Ensure the transition container takes full viewport */
::view-transition-group(*) {
  animation: none;
  height: 100vh;
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
